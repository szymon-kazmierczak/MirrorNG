name: CI
on:
 pull_request: {}
#  push: { branches: [master] }

# on: 
#   push:
#     paths-ignore:
#       - 'doc/**'
#       - '*.md'
  
jobs:
  CI:
    name: Test
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
  
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Activate license
        uses: MirrorNG/unity-runner@3.1.0
        with:
          entrypoint: /activate.sh
          
      - name: Generate Solution
        uses: MirrorNG/unity-runner@3.1.0
        with:
          # Arguments to pass to unity
          args: -buildTarget StandaloneWindows64 -customBuildName MirrorNG -customBuildPath ./build/StandaloneWindows64 -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit
      - name: Whats the name of the sln file?
        run: |
          echo $(pwd)
          find . -name "*.sln"

      - uses: glassechidna/resharper-action@master
        with:
          solution: MirrorNG.sln

#       - name: SonarQube analysis
#         if: always()
#         uses: MirrorNG/unity-runner@3.1.0
#         with:
#           entrypoint: /sonar-scanner.sh
#           projectKey: MirrorNG_MirrorNG
#           projectName: MirrorNG
#           sonarOrganisation: mirrorng
#           beginArguments: >-
#             /d:sonar.verbose="false" 
#             ${{ steps.semantic.outputs.new_release_published == 'true' && format('/v:{0}',steps.semantic.outputs.new_release_version) || '' }}
#             /d:sonar.cs.nunit.reportsPaths=Tests/editmode-results.xml,Tests/playmode-results.xml 
#             /d:sonar.cs.opencover.reportsPaths=Tests/workspace-opencov/EditMode/TestCoverageResults_0000.xml,Tests/workspace-opencov/PlayMode/TestCoverageResults_0000.xml
#         env:
#           FrameworkPathOverride: /opt/Unity/Editor/Data/MonoBleedingEdge/
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
